name: Create and publish a Docker image

on:
  push:
    branches:
      - 'master'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'master'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to the Container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/Dockerfile.alpine
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=local,dest=.
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Tar files
        run: tar czf poorprof-latest-x86_64-linux-musl.tar.gz bin README.md LICENSE

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: poorprof-latest-x86_64-linux-musl
          path: poorprof-latest-x86_64-linux-musl.tar.gz

  publish-pre-release:
    # if: github.event_name != 'pull_request'
    needs: build-and-push-image
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: poorprof-latest-x86_64-linux-musl
          path: artifacts

      - name: Create pre-release
        uses: marvinpinto/action-automatic-releases@v1
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: |
            artifacts/*
